#include <bits/stdc++.h> 
using namespace std; 
  

struct node 
{ 
    int data; 
    struct node *left, *right; 
}; 
  

void printkdistance(node *root, int value) 
{ 
   
    if (root == NULL || value < 0)  return; 
  
    
    if (value==0) 
    { 
        cout << root->data << endl; 
        return; 
    } 
  
    
    printkdistance(root->left, value-1); 
    printkdistance(root->right, value-1); 
} 
  
 
int printk(node* root, node* target , int value) 
{ 
     
    if (root == NULL) return -1; 
  
   
    if (root == target) 
    { 
        printkdistance(root, value); 
        return 0; 
    } 
  
 
    int dl = printk(root->left, target, value); 
  
    
    if (dl != -1) 
    { 
        
         if (dl + 1 == value) 
            cout << root->data << endl; 
  
         
         else
            printkdistance(root->right, value-dl-2); 
  
        
         return 1 + dl; 
    } 
  
  
    int dr = printk(root->right, target, value); 
    if (dr != -1) 
    { 
         if (dr + 1 == value) 
            cout << root->data << endl; 
         else
            printkdistance(root->left, value-dr-2); 
         return 1 + dr; 
    } 
  
   
    return -1; 
} 
  
node *newnode(int data) 
{ 
    node *temp = new node; 
    temp->data = data; 
    temp->left = temp->right = NULL; 
    return temp; 
} 
  

int main() 
{ 
   
    node * root = newnode(10); 
    root->left = newnode(18); 
    root->right = newnode(2); 
    root->left->left = newnode(41); 
    root->left->right = newnode(22); 
    root->left->right->left = newnode(20); 
    root->left->right->right = newnode(14); 
    node * target = root->left->right; 
    
    int k ;
      k = 3 ;
    printk(root, target,k); 
    return 0; 
}